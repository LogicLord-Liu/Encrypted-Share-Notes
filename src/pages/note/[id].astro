---
import Layout from "../../layouts/Layout.astro";

// 在服务器端获取路由参数
const { id } = Astro.params;

// 这个脚本块将在服务器上执行
let noteContent = "正在加载...";
let noteData = null;

// 在服务器端无法访问 localStorage，因此我们需要在客户端脚本中处理
// 这里的变量只是占位符
---

<Layout title="查看笔记 - Enclosed">
  <main class="flex flex-col items-center justify-center min-h-screen">
    <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl text-center">
      <h1 class="text-3xl font-bold mb-6 text-gray-800">笔记内容</h1>

      <div id="note-display-area">
        <p class="text-gray-600">正在加载笔记...</p>
      </div>

      <a href="/" class="mt-8 inline-block text-sky-600 hover:underline"
        >返回首页</a
      >
    </div>
  </main>
</Layout>

<script>
  if (typeof window !== "undefined") {
    const NOTES_STORAGE_KEY = "enclosed_notes_data";
    const url = new URL(window.location.href);
    const noteId = url.pathname.split("/").pop(); // 从 URL 中获取 ID
    const noteDisplayArea = document.getElementById("note-display-area");

    function displayError(message) {
      noteDisplayArea.innerHTML = `
        <div class="text-red-500 font-medium">加载笔记失败:</div>
        <p class="text-red-500">${message}</p>
      `;
    }

    function displayNote(note) {
      // 显示笔记内容
      let contentHtml = `<p class="font-['Helvetica_Neue','PingFang_SC',Arial,sans-serif],text-xl text-gray-900 text-left whitespace-pre-wrap leading-relaxed">${note.content}</p>`;

      // 显示文件列表（如果存在）
      if (note.files && note.files.length > 0) {
        contentHtml += `
          <div class="mt-6 text-left">
            <h2 class="text-2xl font-bold mb-3 text-gray-900">附件</h2>
            <ul class="list-disc pl-5 text-gray-800 text-base">
              ${note.files.map((file) => `<li>${file.name} (${(file.size / 1024).toFixed(1)} KB)</li>`).join("")}
            </ul>
          </div>
        `;
      }

      noteDisplayArea.innerHTML = contentHtml;
    }

    function renderPasswordForm(note) {
      noteDisplayArea.innerHTML = `
        <form id="password-form" class="mt-4">
          <p class="mb-4 text-gray-700 text-base">此笔记受密码保护，请输入密码。</p>
          <input 
            type="password" 
            id="note-password-input" 
            placeholder="请输入密码" 
            class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-sky-500 placeholder-gray-500"
          />
          <button type="submit" class="mt-4 w-full bg-sky-500 text-white font-bold py-2 rounded-md hover:bg-sky-600 transition-colors">
            解锁笔记
          </button>
        </form>
      `;

      const passwordForm = document.getElementById("password-form");
      const passwordInput = document.getElementById("note-password-input");

      passwordForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const password = passwordInput.value;
        if (password === note.password) {
          displayNote(note);
        } else {
          passwordInput.classList.add("border-red-500");
          passwordInput.placeholder = "密码错误，请重试";
          passwordInput.value = "";
        }
      });
    }

    // 页面加载时执行的逻辑
    const notes = JSON.parse(localStorage.getItem(NOTES_STORAGE_KEY) || "[]");
    const foundNote = notes.find((note) => note.id === noteId);

    if (foundNote) {
      if (foundNote.password) {
        renderPasswordForm(foundNote);
      } else {
        displayNote(foundNote);
      }
    } else {
      displayError("笔记未找到。");
    }
  }
</script>
